openapi: 3.0.0
info:
  title: ClassDojo API docs
  version: 1.0.0
paths:
  "/s3":
    post:
      summary: get s3 bucket link
      description: Get a signed link generated by s3 bucket to allow for direct image upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/S3Links"

      responses:
        '200':
          description: Generated links for images
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/s3Response"
                "$ref": "#/components/schemas/S3LinksResponse"
  "/analyze":
    post:
      summary: analyze video frames
      description: Get rekognition data analysis for images uploaded to s3 bucket related to a specific video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataAnalysis"

      responses:
        '200':
          description: Analyzed data
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dataAnalysisResponse"

components:
  schemas:
    s3Response:
      properties:
        message:
          type: string
      required:
        - message

    S3LinksResponse:
      type: object
      additionalProperties:
        required: true
        type: string
      example:
        imageName.jpg: http://images.localhost:9000/images/dummy.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=root%2F20220507%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220507T123814Z&X-Amz-Expires=604800&X-Amz-Signature=627218060ca95a97b5b0b8413ac00e4eeaf72c7adb746a0b3346e7d59665b807&X-Amz-SignedHeaders=host

    S3Links:
      properties:
        videoId:
          type: string
        frames:
          type: array
      required:
        - videoId
        - frames
      example:
        videoId: uuid
        frames: [uuid/1.jpg]

    dataAnalysis:
      properties:
        videoId:
          type: string
      required:
        - videoId
      example:
        videoId: uuid

    dataAnalysisResponse:
      properties:
        frameInfo:
          type: array
        peaks:
          type: object
        valleys:
          type: object
        averages:
          type: object
        required:
          - frameInfo
          - peaks
          - valleys
          - averages
        example:
          frameInfo: [{currentmood, current attention, currentpeople, isImportant}]
          peaks: { moodPeak, attentionPeak, peoplePeak}
          valleys: { moodValley, attentionValley, peopleValley}
          averages : {moodAverage, attentionAverage, peopleAverage}